// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputError should render an error input 1`] = `
<div
  className="form_group"
>
  <input
    className="input_error form_input error"
    onChange={[MockFunction]}
    placeholder=""
    type="text"
    value=""
  />
  <FontAwesomeIcon
    border={false}
    className="error_icon"
    fixedWidth={false}
    flip={null}
    icon={
      Object {
        "icon": Array [
          512,
          512,
          Array [],
          "f057",
          "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
        ],
        "iconName": "times-circle",
        "prefix": "fas",
      }
    }
    inverse={false}
    listItem={false}
    mask={null}
    pull={null}
    pulse={false}
    rotation={null}
    size={null}
    spin={false}
    swapOpacity={false}
    symbol={false}
    title=""
    transform={null}
  />
</div>
`;

exports[`InputError should render an input with a testId 1`] = `
<div
  className="form_group"
>
  <input
    className="input_error form_input"
    data-test="some-id"
    id="some-id"
    name="some-id"
    onChange={[MockFunction]}
    placeholder=""
    type="text"
    value=""
  />
</div>
`;

exports[`InputError should render an input with custom props 1`] = `
<div
  className="form_group"
>
  <input
    className="input_error form_input"
    data-test="some-id"
    foo="bar"
    id="some-id"
    name="own-name-id"
    onChange={[MockFunction]}
    placeholder=""
    type="text"
    value=""
  />
</div>
`;

exports[`InputError should render an input with full props 1`] = `
<div
  className="form_group"
>
  <input
    className="input_error form_input"
    data-test="some-id"
    foo="bar"
    id="some-id"
    name="own-name-id"
    onChange={[MockFunction]}
    placeholder="The placeholder"
    type="text"
    value="the value"
  />
</div>
`;

exports[`InputError should render correctly with the required options 1`] = `
<div
  className="form_group"
>
  <input
    className="input_error form_input"
    onChange={[MockFunction]}
    placeholder=""
    type="text"
    value=""
  />
</div>
`;

exports[`InputError should render secure input 1`] = `
<div
  className="form_group"
>
  <input
    className="input_error form_input"
    onChange={[MockFunction]}
    placeholder=""
    type="password"
    value=""
  />
</div>
`;
